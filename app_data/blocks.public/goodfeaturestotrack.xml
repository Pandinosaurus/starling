<!--
#
# STARLING PROJECT 
#
# LIRIS - Laboratoire d'InfoRmatique en Image et SystÃ¨mes d'information 
#
# Copyright: 2012 - 2015 Eric Lombardi (eric.lombardi@liris.cnrs.fr), LIRIS (liris.cnrs.fr), CNRS (www.cnrs.fr)
#
#
#    This program is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License version 3, as published
#    by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranties of
#    MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
#    PURPOSE.  See the GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    For further information, check the COPYING file distributed with this software.
#
-->    


<properties>

	<!-- legacy block parameters -->	

	<block type='5006' id=''>
		<property name='_PARAM1_' value='1000' desc='max corners'/>
		<property name='_PARAM2_' value='0.01' desc='quality level'/>
		<property name='_PARAM3_' value='1.0' desc='min distance'/>
		<property name='_PARAM4_' value='3' desc='block size'/>
		<property name='_PARAM5_' value='false' desc='use Harris detector'/>
		<property name='_PARAM6_' value='0.04' desc='k'/>
	</block>

	<!-- help -->	

	<help>
The Good Features to Track keypoints.
	</help>

	<!-- block description -->	

	<label>Compute Good Features to Track</label>
	<input  id='1' type='cv::Mat' />
	<output id='1' type='std::vector &lt; cv::KeyPoint &gt;'/>
	<isstream>false</isstream>
	<icon>images/opencv.png</icon>
	<color>50:100:200:150</color>
	<description>Compute Good Features to Track from image</description>
	<treegroup>Features</treegroup>
	
	<!-- informations for code generation -->	

	<includepath path=''/>

	<library name=''/>

	<librarypath path=''/>

	<includes>
		<![CDATA[
#include <vector>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/features2d/features2d.hpp>
		]]>
	</includes>

	<functions>
		<![CDATA[
void computeGFTT( const cv::GoodFeaturesToTrackDetector& gftt, const cv::Mat *in1, std::vector< cv::KeyPoint > *out1)
{
	gftt.detect( *in1, *out1);
}
		]]>
	</functions>
	
	<initializations>
		<![CDATA[
cv::GoodFeaturesToTrackDetector gftt_block_BLOCKID_( _PARAM1_, _PARAM2_, _PARAM3_, _PARAM4_, _PARAM5_, _PARAM6_);
		]]>
	</initializations>

	<processings>
		<![CDATA[
computeGFTT( gftt_block_BLOCKID_, _INPUT1_, _OUTPUT1_);
		]]>
	</processings>

	<cleanings>
		<![CDATA[
		]]>
	</cleanings>

</properties>
