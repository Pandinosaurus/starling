<!--
#
# STARLING PROJECT 
#
# LIRIS - Laboratoire d'InfoRmatique en Image et SystÃ¨mes d'information 
#
# Copyright: 2012 - 2015 Eric Lombardi (eric.lombardi@liris.cnrs.fr), LIRIS (liris.cnrs.fr), CNRS (www.cnrs.fr)
#
#
#    This program is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License version 3, as published
#    by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranties of
#    MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
#    PURPOSE.  See the GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    For further information, check the COPYING file distributed with this software.
#
-->    


<properties>
    <!-- block parameters -->    

    <block type='5010' id=''>
        <property name='_THRESHOLD1_' value='16' desc='first threshold'/>
        <property name='_THRESHOLD2_' value='33' desc='second threshold'/>
        <property name='_APERTURESZ_' value='3' desc='aperture size'/>
        <property name='_L2GRADIENT_' value='false' desc='use L2 norm flag'/>
    </block>

    <!-- help -->    

    <help>
Finds edges in an image using the [Canny86] algorithm.

Parameters:	
 - threshold1 (double): first threshold for the hysteresis procedure.
 - threshold2 (double): second threshold for the hysteresis procedure.
 - apertureSize (int): aperture size for the Sobel() operator.
 - L2gradient (bool): a flag, indicating whether a more accurate L_2 norm =\sqrt{(dI/dx)^2 + (dI/dy)^2} should be used to calculate the image gradient magnitude ( L2gradient=true ), or whether the default L_1 norm =|dI/dx|+|dI/dy| is enough ( L2gradient=false ).

Inputs/outputs:
 - input1: single-channel 8-bit input image.
 - output1: output edge map; it has the same size and type as input image.
	</help>

    <!-- block description -->    

    <label>Canny</label>
    <input id='1' type='cv::Mat'/>
    <output id='1' type='cv::Mat'/>
    <isstream>false</isstream>
    <icon>images/opencv.png</icon>
    <color>50:100:200:150</color>
    <description>Canny</description>
    <treegroup>Features</treegroup>
    
    <!-- informations for code generation -->    

    <includepath path=''/>

    <library name=''/>

    <librarypath path=''/>

    <includes>
        <![CDATA[
        ]]>
    </includes>

    <functions>
        <![CDATA[
        ]]>
    </functions>
    
    <initializations>
        <![CDATA[
        ]]>
    </initializations>

    <processings>
        <![CDATA[
cv::Canny( *(_INPUT1_), *(_OUTPUT1_), _THRESHOLD1_, _THRESHOLD2_, _APERTURESZ_, _L2GRADIENT_);
        ]]>
    </processings>

    <cleanings>
        <![CDATA[
        ]]>
    </cleanings>
</properties>


