<!--
#
# STARLING PROJECT 
#
# LIRIS - Laboratoire d'InfoRmatique en Image et SystÃ¨mes d'information 
#
# Copyright: 2012 - 2015 Eric Lombardi (eric.lombardi@liris.cnrs.fr), LIRIS (liris.cnrs.fr), CNRS (www.cnrs.fr)
#
#
#    This program is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License version 3, as published
#    by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranties of
#    MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
#    PURPOSE.  See the GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    For further information, check the COPYING file distributed with this software.
#
-->    


<properties>

	<!-- legacy block parameters -->	

	<block type='500' id=''>
		<property name='_PARAM1_' value='resource/kth_walkingd1_person01.mpg' type='filename' desc='file name'/>
	</block>

	<!-- help -->	

	<help>
Load images from a video file.
Parameter 1 (string) : video file name.

Output 1 : read image.
	</help>

	<!-- block description -->	

	<label>Read video</label>
	<output id='1' type='cv::Mat'/>
	<isstream>true</isstream>
	<icon>images/acquisition.png</icon>
	<color>50:100:200:150</color>
	<description>Read images from video file</description>
	<treegroup>Input-Output</treegroup>
	
	<!-- informations for code generation -->	

	<includepath path=''/>

	<library name=''/>

	<librarypath path=''/>

	<includes>
		<![CDATA[
		]]>
	</includes>

	<functions>
		<![CDATA[
bool readVideo( cv::VideoCapture *capture, cv::Mat *out)
{
	bool bOk = capture->grab();
	capture->retrieve(*out);

	return bOk;
}
		]]>
	</functions>
	
	<initializations>
		<![CDATA[
cv::VideoCapture capture_block_BLOCKID_("_PARAM1_");
if( ! capture_block_BLOCKID_.isOpened() )
{
	printf( "Failed to open %s video file.\n", "_PARAM1_");
	return -1;
}
		]]>
	</initializations>

	<processings>
		<![CDATA[
if( ! readVideo( &capture_block_BLOCKID_, _OUTPUT1_) )
{
	printf("End of video file.\n");
	break;
}
		]]>
	</processings>

	<cleanings>
		<![CDATA[
		]]>
	</cleanings>

</properties>
