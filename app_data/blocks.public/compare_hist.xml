<!--
#
# STARLING PROJECT 
#
# LIRIS - Laboratoire d'InfoRmatique en Image et SystÃ¨mes d'information 
#
# Copyright: 2012 - 2015 Eric Lombardi (eric.lombardi@liris.cnrs.fr), LIRIS (liris.cnrs.fr), CNRS (www.cnrs.fr)
#
#
#    This program is free software: you can redistribute it and/or modify it
#    under the terms of the GNU General Public License version 3, as published
#    by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranties of
#    MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
#    PURPOSE.  See the GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#    For further information, check the COPYING file distributed with this software.
#
-->    


<properties>

	<!-- legacy block parameters -->	

	<block type='6002' id=''>
		<property name='_PARAM1_' value='CV_COMP_CORREL' desc='Comparison method' type='selector' values='CV_COMP_CORREL;CV_COMP_CHISQR;CV_COMP_INTERSECT;CV_COMP_BHATTACHARYYA;CV_COMP_HELLINGER'/>
	</block>

	<!-- help -->	

	<help>
Compares two histograms.

Comparison method that could be one of the following:
   * CV_COMP_CORREL Correlation
   * CV_COMP_CHISQR Chi-Square
   * CV_COMP_INTERSECT Intersection
   * CV_COMP_BHATTACHARYYA Bhattacharyya distance
   * CV_COMP_HELLINGER Synonym for CV_COMP_BHATTACHARYYA
	</help>

	<!-- block description -->	

	<label>Compare histograms</label>
	<input  id='1' type='cv::MatND' />
	<input  id='2' type='cv::MatND' />
	<output id='1' type='cv::Mat' />
	<isstream>false</isstream>
	<icon>images/opencv.png</icon>
	<color>50:100:200:150</color>
	<description>Compares two histograms</description>
	<treegroup>Histograms</treegroup>
	
	<!-- informations for code generation -->	

	<includepath path=''/>

	<library name=''/>

	<librarypath path=''/>

	<includes>
		<![CDATA[
		]]>
	</includes>

	<functions>
		<![CDATA[
void compareHistograms( const cv::MatND *in1, const cv::MatND *in2, cv::Mat *out1, int method)
{
	// Split planes of histograms
	// because compareHist is only dealing with
	// one channels images.
	std::vector< cv::Mat > bgr_planes_h1;
	cv::split( *in1, bgr_planes_h1 );
	std::vector< cv::Mat > bgr_planes_h2;
	cv::split( *in2, bgr_planes_h2 );

	// Sum score on all channels.
	double score = 0.;
	for( int i = 0 ; i < 3 ; ++i )
	{
		score += cv::compareHist( bgr_planes_h1[i], bgr_planes_h2[i], method);
	}

	*out1 = cv::Mat_<double>(1,1);
	out1->at<double>(0, 0) = score/3.0;
}
		]]>
	</functions>
	
	<initializations>
		<![CDATA[
		]]>
	</initializations>

	<processings>
		<![CDATA[
compareHistograms( _INPUT1_, _INPUT2_, _OUTPUT1_, _PARAM1_);
		]]>
	</processings>

	<cleanings>
		<![CDATA[
		]]>
	</cleanings>

</properties>
